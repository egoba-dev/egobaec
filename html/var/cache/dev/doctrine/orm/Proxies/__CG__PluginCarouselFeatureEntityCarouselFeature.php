<?php

namespace Proxies\__CG__\Plugin\CarouselFeature\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class CarouselFeature extends \Plugin\CarouselFeature\Entity\CarouselFeature implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Plugin\\CarouselFeature\\Entity\\CarouselFeature' . "\0" . 'id', '' . "\0" . 'Plugin\\CarouselFeature\\Entity\\CarouselFeature' . "\0" . 'title', '' . "\0" . 'Plugin\\CarouselFeature\\Entity\\CarouselFeature' . "\0" . 'content', '' . "\0" . 'Plugin\\CarouselFeature\\Entity\\CarouselFeature' . "\0" . 'status', '' . "\0" . 'Plugin\\CarouselFeature\\Entity\\CarouselFeature' . "\0" . 'sort_no', '' . "\0" . 'Plugin\\CarouselFeature\\Entity\\CarouselFeature' . "\0" . 'link_type', '' . "\0" . 'Plugin\\CarouselFeature\\Entity\\CarouselFeature' . "\0" . 'link_url', '' . "\0" . 'Plugin\\CarouselFeature\\Entity\\CarouselFeature' . "\0" . 'link_text', '' . "\0" . 'Plugin\\CarouselFeature\\Entity\\CarouselFeature' . "\0" . 'Product', '' . "\0" . 'Plugin\\CarouselFeature\\Entity\\CarouselFeature' . "\0" . 'create_date', '' . "\0" . 'Plugin\\CarouselFeature\\Entity\\CarouselFeature' . "\0" . 'update_date', '' . "\0" . 'Plugin\\CarouselFeature\\Entity\\CarouselFeature' . "\0" . 'CarouselImages'];
        }

        return ['__isInitialized__', '' . "\0" . 'Plugin\\CarouselFeature\\Entity\\CarouselFeature' . "\0" . 'id', '' . "\0" . 'Plugin\\CarouselFeature\\Entity\\CarouselFeature' . "\0" . 'title', '' . "\0" . 'Plugin\\CarouselFeature\\Entity\\CarouselFeature' . "\0" . 'content', '' . "\0" . 'Plugin\\CarouselFeature\\Entity\\CarouselFeature' . "\0" . 'status', '' . "\0" . 'Plugin\\CarouselFeature\\Entity\\CarouselFeature' . "\0" . 'sort_no', '' . "\0" . 'Plugin\\CarouselFeature\\Entity\\CarouselFeature' . "\0" . 'link_type', '' . "\0" . 'Plugin\\CarouselFeature\\Entity\\CarouselFeature' . "\0" . 'link_url', '' . "\0" . 'Plugin\\CarouselFeature\\Entity\\CarouselFeature' . "\0" . 'link_text', '' . "\0" . 'Plugin\\CarouselFeature\\Entity\\CarouselFeature' . "\0" . 'Product', '' . "\0" . 'Plugin\\CarouselFeature\\Entity\\CarouselFeature' . "\0" . 'create_date', '' . "\0" . 'Plugin\\CarouselFeature\\Entity\\CarouselFeature' . "\0" . 'update_date', '' . "\0" . 'Plugin\\CarouselFeature\\Entity\\CarouselFeature' . "\0" . 'CarouselImages'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (CarouselFeature $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function prePersist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prePersist', []);

        return parent::prePersist();
    }

    /**
     * {@inheritDoc}
     */
    public function preUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preUpdate', []);

        return parent::preUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContent', []);

        return parent::getContent();
    }

    /**
     * {@inheritDoc}
     */
    public function setContent($content)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContent', [$content]);

        return parent::setContent($content);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getSortNo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSortNo', []);

        return parent::getSortNo();
    }

    /**
     * {@inheritDoc}
     */
    public function setSortNo($sort_no)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSortNo', [$sort_no]);

        return parent::setSortNo($sort_no);
    }

    /**
     * {@inheritDoc}
     */
    public function getLinkType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLinkType', []);

        return parent::getLinkType();
    }

    /**
     * {@inheritDoc}
     */
    public function setLinkType($link_type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLinkType', [$link_type]);

        return parent::setLinkType($link_type);
    }

    /**
     * {@inheritDoc}
     */
    public function getLinkUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLinkUrl', []);

        return parent::getLinkUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setLinkUrl($link_url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLinkUrl', [$link_url]);

        return parent::setLinkUrl($link_url);
    }

    /**
     * {@inheritDoc}
     */
    public function getLinkText()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLinkText', []);

        return parent::getLinkText();
    }

    /**
     * {@inheritDoc}
     */
    public function setLinkText($link_text)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLinkText', [$link_text]);

        return parent::setLinkText($link_text);
    }

    /**
     * {@inheritDoc}
     */
    public function getProduct()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProduct', []);

        return parent::getProduct();
    }

    /**
     * {@inheritDoc}
     */
    public function setProduct(\Eccube\Entity\Product $Product = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProduct', [$Product]);

        return parent::setProduct($Product);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreateDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreateDate', []);

        return parent::getCreateDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreateDate($create_date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreateDate', [$create_date]);

        return parent::setCreateDate($create_date);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdateDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdateDate', []);

        return parent::getUpdateDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdateDate($update_date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdateDate', [$update_date]);

        return parent::setUpdateDate($update_date);
    }

    /**
     * {@inheritDoc}
     */
    public function getCarouselImages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCarouselImages', []);

        return parent::getCarouselImages();
    }

    /**
     * {@inheritDoc}
     */
    public function addCarouselImage(\Plugin\CarouselFeature\Entity\CarouselImage $carouselImage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCarouselImage', [$carouselImage]);

        return parent::addCarouselImage($carouselImage);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCarouselImage(\Plugin\CarouselFeature\Entity\CarouselImage $carouselImage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCarouselImage', [$carouselImage]);

        return parent::removeCarouselImage($carouselImage);
    }

    /**
     * {@inheritDoc}
     */
    public function getValidImages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidImages', []);

        return parent::getValidImages();
    }

    /**
     * {@inheritDoc}
     */
    public function getResolvedLinkUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResolvedLinkUrl', []);

        return parent::getResolvedLinkUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function getResolvedLinkText()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResolvedLinkText', []);

        return parent::getResolvedLinkText();
    }

    /**
     * {@inheritDoc}
     */
    public function isPublished()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPublished', []);

        return parent::isPublished();
    }

    /**
     * {@inheritDoc}
     */
    public function hasValidLink()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasValidLink', []);

        return parent::hasValidLink();
    }

    /**
     * {@inheritDoc}
     */
    public function offsetExists($offset)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetExists', [$offset]);

        return parent::offsetExists($offset);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetSet($offset, $value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetSet', [$offset, $value]);

        return parent::offsetSet($offset, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetGet($offset)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetGet', [$offset]);

        return parent::offsetGet($offset);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetUnset($offset)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetUnset', [$offset]);

        return parent::offsetUnset($offset);
    }

    /**
     * {@inheritDoc}
     */
    public function setPropertiesFromArray(array $arrProps, array $excludeAttribute = [], \ReflectionClass $parentClass = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPropertiesFromArray', [$arrProps, $excludeAttribute, $parentClass]);

        return parent::setPropertiesFromArray($arrProps, $excludeAttribute, $parentClass);
    }

    /**
     * {@inheritDoc}
     */
    public function toArray(array $excludeAttribute = ['__initializer__', '__cloner__', '__isInitialized__'], \ReflectionClass $parentClass = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', [$excludeAttribute, $parentClass]);

        return parent::toArray($excludeAttribute, $parentClass);
    }

    /**
     * {@inheritDoc}
     */
    public function toNormalizedArray(array $excludeAttribute = ['__initializer__', '__cloner__', '__isInitialized__'])
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toNormalizedArray', [$excludeAttribute]);

        return parent::toNormalizedArray($excludeAttribute);
    }

    /**
     * {@inheritDoc}
     */
    public function toJSON(array $excludeAttribute = ['__initializer__', '__cloner__', '__isInitialized__'])
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toJSON', [$excludeAttribute]);

        return parent::toJSON($excludeAttribute);
    }

    /**
     * {@inheritDoc}
     */
    public function toXML(array $excludeAttribute = ['__initializer__', '__cloner__', '__isInitialized__'])
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toXML', [$excludeAttribute]);

        return parent::toXML($excludeAttribute);
    }

    /**
     * {@inheritDoc}
     */
    public function copyProperties($srcObject, array $excludeAttribute = [])
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'copyProperties', [$srcObject, $excludeAttribute]);

        return parent::copyProperties($srcObject, $excludeAttribute);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityIdentifierAsArray(\Eccube\Entity\AbstractEntity $Entity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityIdentifierAsArray', [$Entity]);

        return parent::getEntityIdentifierAsArray($Entity);
    }

}
