<?php

namespace ContainerAlJK2dx;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getRentalProductControllerService extends Eccube_KernelDevDebugContainer
{
    /**
     * Gets the public 'Plugin\Rental\Controller\Front\RentalProductController' shared autowired service.
     *
     * @return \Plugin\Rental\Controller\Front\RentalProductController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/Eccube/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/app/Plugin/Rental/Controller/Front/RentalProductController.php';
        include_once \dirname(__DIR__, 4).'/app/Plugin/Rental/Service/RentalCalculationService.php';

        $container->services['Plugin\\Rental\\Controller\\Front\\RentalProductController'] = $instance = new \Plugin\Rental\Controller\Front\RentalProductController(($container->privates['Eccube\\Repository\\ProductClassRepository'] ?? $container->getProductClassRepositoryService()), ($container->privates['Eccube\\Service\\CartService'] ?? $container->getCartServiceService()), ($container->privates['Plugin\\Rental\\Service\\RentalCalculationService'] ?? ($container->privates['Plugin\\Rental\\Service\\RentalCalculationService'] = new \Plugin\Rental\Service\RentalCalculationService())), ($container->privates['monolog.logger'] ?? $container->getMonolog_LoggerService()));

        $instance->setEccubeConfig(($container->services['Eccube\\Common\\EccubeConfig'] ?? ($container->services['Eccube\\Common\\EccubeConfig'] = new \Eccube\Common\EccubeConfig($container))));
        $instance->setEntityManager(($container->services['doctrine.orm.default_entity_manager'] ?? $container->getDoctrine_Orm_DefaultEntityManagerService()));
        $instance->setTranslator(($container->services['translator'] ?? $container->getTranslatorService()));
        $instance->setSession(($container->services['.container.private.session'] ?? $container->get_Container_Private_SessionService()));
        $instance->setFormFactory(($container->services['.container.private.form.factory'] ?? $container->load('get_Container_Private_Form_FactoryService')));
        $instance->setEventDispatcher(($container->services['event_dispatcher'] ?? $container->getEventDispatcherService()));
        $instance->setContainer(($container->privates['.service_locator.mx0UMmY'] ?? $container->load('get_ServiceLocator_Mx0UMmYService'))->withContext('Plugin\\Rental\\Controller\\Front\\RentalProductController', $container));

        return $instance;
    }
}
