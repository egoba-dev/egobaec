{% extends '@admin/default_frame.twig' %}

{% set menus = ['content', 'carousel_feature'] %}

{% block title %}カルーセル特集 - 表示設定{% endblock %}
{% block sub_title %}表示設定{% endblock %}

{% block stylesheet %}
<style>
/* 簡単な管理画面用スタイル */
.config-preview {
    background: #f8f9fa;
    border: 1px solid #dee2e6;
    border-radius: 8px;
    padding: 2rem;
    min-height: 300px;
    position: relative;
    overflow: hidden;
}

.preview-carousel {
    position: relative;
    width: 100%;
    height: 250px;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.preview-track {
    display: flex;
    width: 300%;
    height: 100%;
    transition: transform 0.6s ease;
}

.preview-slide {
    flex: 0 0 33.333%;
    height: 100%;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-weight: bold;
    font-size: 1.2rem;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
}

.preview-slide:nth-child(1) {
    background: linear-gradient(45deg, #667eea 0%, #764ba2 100%);
}

.preview-slide:nth-child(2) {
    background: linear-gradient(45deg, #f093fb 0%, #f5576c 100%);
}

.preview-slide:nth-child(3) {
    background: linear-gradient(45deg, #4facfe 0%, #00f2fe 100%);
}

.preview-nav {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(255, 255, 255, 0.9);
    border: none;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    z-index: 10;
}

.preview-nav:hover {
    background: white;
    transform: translateY(-50%) scale(1.1);
}

.preview-nav.prev {
    left: 10px;
}

.preview-nav.next {
    right: 10px;
}

.preview-indicators {
    position: absolute;
    bottom: 15px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 8px;
    z-index: 10;
}

.preview-indicator {
    width: 10px;
    height: 10px;
    border: 2px solid rgba(255, 255, 255, 0.7);
    border-radius: 50%;
    background: transparent;
    cursor: pointer;
    transition: all 0.3s ease;
}

.preview-indicator.active {
    background: white;
    border-color: white;
}

.form-range {
    width: 100%;
}

.config-card {
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    border: none;
}

.stat-value {
    font-size: 1.5rem;
    font-weight: bold;
    color: #007bff;
}

.stat-label {
    font-size: 0.9rem;
    color: #6c757d;
}

.form-group {
    margin-bottom: 1.5rem;
}

.preview-controls {
    position: absolute;
    top: 10px;
    right: 10px;
    z-index: 20;
}

.preview-status {
    background: rgba(0, 123, 255, 0.1);
    border: 1px solid rgba(0, 123, 255, 0.3);
    color: #007bff;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-size: 0.8rem;
    font-weight: 600;
}
</style>
{% endblock %}

{% block main %}
<div class="c-contentsArea__cols">
    <div class="c-contentsArea__primaryCol">
        <div class="c-primaryCol">
            
            {# 統計情報 #}
            {% if stats is defined %}
            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="card config-card bg-info text-white">
                        <div class="card-body text-center">
                            <div class="stat-value">{{ stats.display_count }}</div>
                            <div class="stat-label">表示枚数</div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card config-card {{ stats.auto_play_enabled ? 'bg-success' : 'bg-secondary' }} text-white">
                        <div class="card-body text-center">
                            <div class="stat-value">
                                <i class="fa fa-{{ stats.auto_play_enabled ? 'play' : 'pause' }}"></i>
                            </div>
                            <div class="stat-label">自動再生</div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card config-card bg-warning text-white">
                        <div class="card-body text-center">
                            <div class="stat-value">{{ (stats.auto_play_interval_seconds|default(5)) }}s</div>
                            <div class="stat-label">再生間隔</div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card config-card bg-primary text-white">
                        <div class="card-body text-center">
                            <div class="stat-value">{{ stats.transition_duration_seconds|default(0.5) }}s</div>
                            <div class="stat-label">切替時間</div>
                        </div>
                    </div>
                </div>
            </div>
            {% endif %}

            {# 設定フォーム #}
            <div class="card config-card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fa fa-cog"></i> カルーセル表示設定
                    </h5>
                </div>
                <div class="card-body">
                    
                    {{ form_start(form, {'attr': {'id': 'configForm'}}) }}
                    
                    <div class="row">
                        <div class="col-md-6">
                            <h6 class="text-muted mb-3">基本設定</h6>
                            
                            {# 表示枚数 #}
                            <div class="form-group">
                                {{ form_label(form.display_count) }}
                                {{ form_widget(form.display_count, {'attr': {'class': 'form-control config-input'}}) }}
                                <small class="form-text text-muted">1-10枚まで設定可能です</small>
                                {{ form_errors(form.display_count) }}
                            </div>

                            {# 自動再生 #}
                            <div class="form-group">
                                <div class="form-check">
                                    {{ form_widget(form.auto_play, {'attr': {'class': 'form-check-input config-input'}}) }}
                                    {{ form_label(form.auto_play, null, {'attr': {'class': 'form-check-label'}}) }}
                                </div>
                                <small class="form-text text-muted">カルーセルの自動切り替えを有効にします</small>
                                {{ form_errors(form.auto_play) }}
                            </div>

                            {# 自動再生間隔 #}
                            <div class="form-group">
                                {{ form_label(form.auto_play_interval) }}
                                <div class="input-group">
                                    {{ form_widget(form.auto_play_interval, {'attr': {'class': 'form-control config-input'}}) }}
                                    <div class="input-group-append">
                                        <span class="input-group-text">ms</span>
                                    </div>
                                </div>
                                <small class="form-text text-muted">1000-30000ms（1-30秒）で設定してください</small>
                                {{ form_errors(form.auto_play_interval) }}
                            </div>

                            {# トランジション効果 #}
                            <div class="form-group">
                                {{ form_label(form.transition_effect) }}
                                {{ form_widget(form.transition_effect, {'attr': {'class': 'form-control config-input'}}) }}
                                <small class="form-text text-muted">スライドの切り替え効果を選択してください</small>
                                {{ form_errors(form.transition_effect) }}
                            </div>

                            {# トランジション時間 #}
                            <div class="form-group">
                                {{ form_label(form.transition_duration) }}
                                <div class="input-group">
                                    {{ form_widget(form.transition_duration, {'attr': {'class': 'form-control config-input'}}) }}
                                    <div class="input-group-append">
                                        <span class="input-group-text">ms</span>
                                    </div>
                                </div>
                                <small class="form-text text-muted">100-2000ms（0.1-2秒）で設定してください</small>
                                {{ form_errors(form.transition_duration) }}
                            </div>
                        </div>

                        <div class="col-md-6">
                            <h6 class="text-muted mb-3">UI設定</h6>
                            
                            {# ナビゲーション表示 #}
                            <div class="form-group">
                                <div class="form-check">
                                    {{ form_widget(form.show_navigation, {'attr': {'class': 'form-check-input config-input'}}) }}
                                    {{ form_label(form.show_navigation, null, {'attr': {'class': 'form-check-label'}}) }}
                                </div>
                                <small class="form-text text-muted">前へ・次へボタンを表示します</small>
                                {{ form_errors(form.show_navigation) }}
                            </div>

                            {# インジケーター表示 #}
                            <div class="form-group">
                                <div class="form-check">
                                    {{ form_widget(form.show_indicators, {'attr': {'class': 'form-check-input config-input'}}) }}
                                    {{ form_label(form.show_indicators, null, {'attr': {'class': 'form-check-label'}}) }}
                                </div>
                                <small class="form-text text-muted">スライド位置を示すドットを表示します</small>
                                {{ form_errors(form.show_indicators) }}
                            </div>

                            {# タッチスワイプ #}
                            <div class="form-group">
                                <div class="form-check">
                                    {{ form_widget(form.enable_touch_swipe, {'attr': {'class': 'form-check-input config-input'}}) }}
                                    {{ form_label(form.enable_touch_swipe, null, {'attr': {'class': 'form-check-label'}}) }}
                                </div>
                                <small class="form-text text-muted">スマートフォンでのスワイプ操作を有効にします</small>
                                {{ form_errors(form.enable_touch_swipe) }}
                            </div>

                            {# キーボードナビゲーション #}
                            <div class="form-group">
                                <div class="form-check">
                                    {{ form_widget(form.enable_keyboard_nav, {'attr': {'class': 'form-check-input config-input'}}) }}
                                    {{ form_label(form.enable_keyboard_nav, null, {'attr': {'class': 'form-check-label'}}) }}
                                </div>
                                <small class="form-text text-muted">キーボードの左右矢印キーでの操作を有効にします</small>
                                {{ form_errors(form.enable_keyboard_nav) }}
                            </div>
                            
                            {# プレビューエリア #}
                            <div class="mt-4">
                                <h6 class="text-muted mb-3">プレビュー</h6>
                                <div class="config-preview">
                                    <div class="preview-controls">
                                        <span class="preview-status">プレビュー</span>
                                    </div>
                                    <div class="preview-carousel" id="previewCarousel">
                                        <div class="preview-track" id="previewTrack">
                                            <div class="preview-slide">
                                                <div class="text-center">
                                                    <h4>スライド 1</h4>
                                                    <p>サンプル画像</p>
                                                </div>
                                            </div>
                                            <div class="preview-slide">
                                                <div class="text-center">
                                                    <h4>スライド 2</h4>
                                                    <p>サンプル画像</p>
                                                </div>
                                            </div>
                                            <div class="preview-slide">
                                                <div class="text-center">
                                                    <h4>スライド 3</h4>
                                                    <p>サンプル画像</p>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <button class="preview-nav prev" type="button" id="previewPrev">
                                            <i class="fa fa-chevron-left"></i>
                                        </button>
                                        <button class="preview-nav next" type="button" id="previewNext">
                                            <i class="fa fa-chevron-right"></i>
                                        </button>
                                        
                                        <div class="preview-indicators" id="previewIndicators">
                                            <button class="preview-indicator active" data-slide="0"></button>
                                            <button class="preview-indicator" data-slide="1"></button>
                                            <button class="preview-indicator" data-slide="2"></button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    {# 保存ボタン #}
                    <div class="row mt-4">
                        <div class="col-12">
                            <div class="text-center">
                                <button type="submit" class="btn btn-primary btn-lg mr-3">
                                    <i class="fa fa-save"></i> 設定を保存
                                </button>
                                <button type="button" class="btn btn-secondary" id="resetToDefault">
                                    <i class="fa fa-undo"></i> デフォルトに戻す
                                </button>
                                <a href="{{ url('admin_carousel_feature_list') }}" class="btn btn-outline-secondary">
                                    <i class="fa fa-arrow-left"></i> 記事一覧に戻る
                                </a>
                            </div>
                        </div>
                    </div>

                    {{ form_end(form) }}
                </div>
            </div>
        </div>
    </div>
</div>

{# CSRF トークン #}
<input type="hidden" id="csrf_token" value="{{ csrf_token('authenticate') }}">
{% endblock %}

{% block javascript %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    // プレビューカルーセルの制御
    const previewTrack = document.getElementById('previewTrack');
    const previewPrev = document.getElementById('previewPrev');
    const previewNext = document.getElementById('previewNext');
    const previewIndicators = document.querySelectorAll('.preview-indicator');
    const configInputs = document.querySelectorAll('.config-input');
    
    let currentSlide = 0;
    let autoPlayInterval;
    let previewConfig = {
        autoPlay: true,
        autoPlayInterval: 4000,
        showNavigation: true,
        showIndicators: true,
        transitionDuration: 600
    };
    
    function updatePreviewSlide(index) {
        const translateX = -index * 33.333;
        previewTrack.style.transform = `translateX(${translateX}%)`;
        
        previewIndicators.forEach((indicator, i) => {
            indicator.classList.toggle('active', i === index);
        });
        
        currentSlide = index;
        console.log('Preview slide changed to:', index);
    }
    
    function nextPreviewSlide() {
        const next = (currentSlide + 1) % 3;
        updatePreviewSlide(next);
    }
    
    function prevPreviewSlide() {
        const prev = (currentSlide - 1 + 3) % 3;
        updatePreviewSlide(prev);
    }
    
    function startPreviewAutoPlay() {
        if (previewConfig.autoPlay) {
            autoPlayInterval = setInterval(nextPreviewSlide, previewConfig.autoPlayInterval);
        }
    }
    
    function stopPreviewAutoPlay() {
        if (autoPlayInterval) {
            clearInterval(autoPlayInterval);
            autoPlayInterval = null;
        }
    }
    
    function updatePreviewConfig() {
        const form = document.getElementById('configForm');
        const formData = new FormData(form);
        
        previewConfig.autoPlay = formData.get('config[auto_play]') === '1';
        previewConfig.autoPlayInterval = parseInt(formData.get('config[auto_play_interval]')) || 4000;
        previewConfig.showNavigation = formData.get('config[show_navigation]') === '1';
        previewConfig.showIndicators = formData.get('config[show_indicators]') === '1';
        previewConfig.transitionDuration = parseInt(formData.get('config[transition_duration]')) || 600;
        
        // UI要素の表示/非表示切り替え
        previewPrev.style.display = previewConfig.showNavigation ? 'flex' : 'none';
        previewNext.style.display = previewConfig.showNavigation ? 'flex' : 'none';
        document.getElementById('previewIndicators').style.display = previewConfig.showIndicators ? 'flex' : 'none';
        
        // トランジション時間の更新
        previewTrack.style.transitionDuration = `${previewConfig.transitionDuration}ms`;
        
        // 自動再生の再開
        stopPreviewAutoPlay();
        startPreviewAutoPlay();
        
        console.log('Preview config updated:', previewConfig);
    }
    
    // イベントリスナー
    previewNext.addEventListener('click', function(e) {
        e.preventDefault();
        stopPreviewAutoPlay();
        nextPreviewSlide();
        startPreviewAutoPlay();
    });
    
    previewPrev.addEventListener('click', function(e) {
        e.preventDefault();
        stopPreviewAutoPlay();
        prevPreviewSlide();
        startPreviewAutoPlay();
    });
    
    previewIndicators.forEach((indicator, index) => {
        indicator.addEventListener('click', function(e) {
            e.preventDefault();
            stopPreviewAutoPlay();
            updatePreviewSlide(index);
            startPreviewAutoPlay();
        });
    });
    
    // 設定変更時にプレビューを更新
    configInputs.forEach(input => {
        input.addEventListener('change', updatePreviewConfig);
    });
    
    // マウスオーバーで自動再生停止
    document.getElementById('previewCarousel').addEventListener('mouseenter', stopPreviewAutoPlay);
    document.getElementById('previewCarousel').addEventListener('mouseleave', startPreviewAutoPlay);
    
    // 初期設定
    updatePreviewConfig();
    
    // デフォルトリセットボタン
    document.getElementById('resetToDefault')?.addEventListener('click', function() {
        if (confirm('設定をデフォルトに戻しますか？')) {
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = '{{ url('admin_carousel_feature_config_reset') }}';
            
            const token = document.createElement('input');
            token.type = 'hidden';
            token.name = '_token';
            token.value = document.getElementById('csrf_token').value;
            form.appendChild(token);
            
            document.body.appendChild(form);
            form.submit();
        }
    });
});
</script>
{% endblock %}